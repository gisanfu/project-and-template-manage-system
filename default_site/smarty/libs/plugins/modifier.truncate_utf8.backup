<?php
/**
 * Smarty plugin
 * @package Smarty
 * @subpackage plugins
 */


/**
 * Smarty truncate modifier plugin
 *
 * Type:     modifier<br>
 * Name:     truncate<br>
 * Purpose:  Truncate a string to a certain length if necessary,
 *           optionally splitting in the middle of a word, and
 *           appending the $etc string or inserting $etc into the middle.
 * @link http://smarty.php.net/manual/en/language.modifier.truncate.php
 *          truncate (Smarty online manual)
 * @author   Monte Ohrt <monte at ohrt dot com>
 * @param string
 * @param integer
 * @param string
 * @param boolean
 * @param boolean
 * @return string
 */
function smarty_modifier_truncate($string, $length = 80, $etc = '...', $break_words = fale)
{
  $start=0;
  $code="UTF-8";
  if($code == 'UTF-8')
  {
   $pa = "/[\x01-\x7f]|[\xc2-\xdf][\x80-\xbf]|\xe0[\xa0-\xbf][\x80-\xbf]|[\xe1-\xef][\x80-\xb[8 0-\xbf]|\xf0[\x90-\xbf][\x80-\xbf][\x80-\xbf]|[\xf1-\xf7][\x80-\xbf][\x80-\xbf][\x80-\xb/";
   preg_match_all($pa, $string, $t_string);
  
   if(count($t_string[0]) - $start > $length)
    return join('', array_slice($t_string[0], $start, $length)).'...';
   return join('', array_slice($t_string[0], $start, $length));
  }
  else
  {
   $start = $start*2;
   $length = $length*2;
   $strlen = strlen($string);
   $tmpstr = '';
  
   for($i=0; $i<$strlen; $i++)
   {
    if($i>=$start && $i<($start+$length))
    {
     if(ord(substr($string, $i, 1))>129)
      $tmpstr.= substr($string, $i, 2);
     else
      $tmpstr.= substr($string, $i, 1);
    }
    if(ord(substr($string, $i, 1))>129)
     $i++;
   }
   if(strlen($tmpstr)<$strlen ) $tmpstr.= '...';
   return $tmpstr;
  }
}

/* vim: set expandtab: */

?>
